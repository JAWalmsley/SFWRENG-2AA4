@startuml
activate IslandBuilder

IslandBuilder -> Shape: draw()
Shape -> IslandBuilder

create ElevationFactory
activate ElevationFactory
IslandBuilder -> ElevationFactory: setElevation(board)
ElevationFactory -> IslandBuilder
deactivate ElevationFactory

create PlaceLakes
activate PlaceLakes
IslandBuilder -> PlaceLakes: drawLakes(board)
PlaceLakes -> IslandBuilder
deactivate PlaceLakes

create Aquifers
activate Aquifers
IslandBuilder -> Aquifers: placeAquifers(board)
Aquifers -> IslandBuilder
deactivate Aquifers

create RiverGenerator
activate RiverGenerator
IslandBuilder -> RiverGenerator: placeRivers(board)
RiverGenerator -> IslandBuilder
deactivate RiverGenerator

create MoistureProfile
activate MoistureProfile
IslandBuilder -> MoistureProfile: drawMoisture(board)
MoistureProfile -> IslandBuilder
deactivate MoistureProfile

create DefaultRoads
activate DefaultRoads
IslandBuilder -> DefaultRoads: drawRoads(board)

create MarkovNameGenerator
DefaultRoads -> MarkovNameGenerator:
activate MarkovNameGenerator
MarkovNameGenerator -> DefaultRoads:
deactivate MarkovNameGenerator
DefaultRoads -> DefaultRoads: placeCities()
DefaultRoads -> MarkovNameGenerator: generateName()
activate MarkovNameGenerator
MarkovNameGenerator -> DefaultRoads:
deactivate MarkovNameGenerator

create BoardToGraph
DefaultRoads -> BoardToGraph:
activate BoardToGraph
BoardToGraph -> DefaultRoads:
DefaultRoads -> BoardToGraph: getGraph()
BoardToGraph -> DefaultRoads:
DefaultRoads -> BoardToGraph: getNodeMap()
BoardToGraph -> DefaultRoads:
deactivate BoardToGraph

DefaultRoads -> DefaultRoads: connectCities()
create DjikstraPathfinder
DefaultRoads -> DjikstraPathfinder:
activate DjikstraPathfinder
DjikstraPathfinder -> DefaultRoads:
loop for each city
    DefaultRoads -> DjikstraPathfinder: findShortestPath()
    DjikstraPathfinder -> DefaultRoads:
end
DefaultRoads -> IslandBuilder
deactivate DefaultRoads
deactivate DjikstraPathfinder

deactivate IslandBuilder
@enduml